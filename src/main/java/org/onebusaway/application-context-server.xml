<?xml version="1.0" encoding="UTF-8"?>
    <!--
        Copyright 2008 Brian Ferris Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
        file except in compliance with the License. You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
        either express or implied. See the License for the specific language governing permissions and limitations under
        the License.
    -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <!--  -->
    <bean id="cacheableInterceptor" class="org.onebusaway.common.spring.CacheableInterceptor">
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <!-- SCAN FOR COMPONENTS -->
    <context:component-scan base-package="org.onebusaway.gtfs.impl" />
    <context:component-scan base-package="org.onebusaway.where.impl" />

    <!--  -->
    <bean id="serviceCalendarDataFactory" class="org.onebusaway.gtfs.impl.ServiceCalendarDataFactoryBean"
        lazy-init="true" />
    <bean id="serviceCalendarData" class="org.onebusaway.common.spring.CachedSerializedBeanFactory" lazy-init="true">
        <property name="beanName" value="serviceCalendarDataFactory" />
        <property name="file" ref="serviceCalendarDataCacheFile" />
        <property name="singleton" value="true" />
    </bean>
    <bean id="calendarServiceImpl" class="org.onebusaway.gtfs.impl.CalendarServiceImpl">
        <property name="serviceCalendarData" ref="serviceCalendarData" />
    </bean>

    <!--  -->
    <bean id="whereMessages" class="org.onebusaway.common.web.TypedMessagesFactory">
        <property name="messagesClass" value="org.onebusaway.where.web.actions.WhereMessages" />
    </bean>

    <!--  -->
    <bean id="stopTimePredictionServiceImpl" class="org.onebusaway.where.impl.StopTimePredictionServiceImpl">
        <property name="timepointsByTripCache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager" ref="cacheManager" />
                <property name="cacheName" value="org.onebusaway.where.impl.StopTimePredictionServiceImpl.timepointCache" />
            </bean>
        </property>
        <property name="predictionsByTripCache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager" ref="cacheManager" />
                <property name="cacheName" value="org.onebusaway.where.impl.StopTimePredictionServiceImpl.predictionsCache" />
            </bean>
        </property>
        <property name="outputLog">
            <bean class="org.onebusaway.common.impl.TimeRotationWriterFactoryBean">
                <property name="path" ref="predictionLogSpec" />
            </bean>
        </property>
    </bean>

    <!-- PHONE RESOURCES -->

    <bean id="myxworkConfiguration" class="org.onebusaway.common.spring.XWorkConfigurationFactoryBean">
        <property name="xmlConfigurationSource" value="org/onebusaway/where/phone/xwork.xml" />
    </bean>

    <bean id="agiServer" class="org.asteriskjava.fastagi.DefaultAgiServer">
        <property name="mappingStrategy" ref="mappingStrategy" />
        <property name="port" value="8001" />
    </bean>

    <bean id="mappingStrategy" class="org.asteriskjava.fastagi.SimpleMappingStrategy">
        <property name="mappings">
            <map>
                <entry key="index.agi" value-ref="agiEntryPoint" />
            </map>
        </property>
    </bean>

    <bean id="agiEntryPoint" class="org.traditionalcake.probablecalls.AgiEntryPoint">
        <property name="action" value="/welcome" />
        <property name="configuration" ref="myxworkConfiguration" />
        <property name="pauseBetweenActions" value="500" />
    </bean>

    <bean id="agiTemplateSource" class="org.traditionalcake.probablecalls.agitemplates.ClasspathScanningAgiTemplateSource">
        <property name="scanPackage" value="org.onebusaway.where.phone.templates" />
    </bean>


    <bean id="org.traditionalcake.probablecalls.agitemplates.AgiTemplateDispatcher" class="org.traditionalcake.probablecalls.agitemplates.AgiTemplateDispatcher">
        <property name="templateSource" ref="agiTemplateSource" />
    </bean>

    <bean id="agiServerThread" class="org.asteriskjava.fastagi.AgiServerThread" init-method="startup"
        destroy-method="shutdown">
        <property name="agiServer" ref="agiServer" />
    </bean>

    <bean id="nameNormalizationStrategy" class="org.onebusaway.common.replacement.NameNormalizationStrategy" />
    <bean id="pronunciationStrategy" class="org.onebusaway.where.phone.PronunciationStrategy">
        <property name="nameNormalizationStrategy" ref="nameNormalizationStrategy" />
    </bean>

</beans>